name: Build Proposals
on: push
jobs:
  build:
    name: Build WG21
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Utilities
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >
          gh release download
          --repo burntsushi/ripgrep
          --pattern *.deb
      - name: Install Utilities
        run: sudo apt install ./*.deb
      - name: Setup Node
        uses: actions/setup-node@v2-beta
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Find NPM Cache
        id: npm-cache
        run: echo "::set-output name=path::$(npm config get cache)"
      - name: Check NPM Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.path }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Check Python Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Netlify CLI
        run: sudo npm install --global netlify-cli
      - name: Install Bikeshed
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade bikeshed
      - name: Update Bikeshed
        run: bikeshed update
      - name: Build Documents
        run: make --jobs
      - name: Deploy Preview
        if: ${{ github.actor == 'slurps-mad-rips' }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --json --dir=build --prod
